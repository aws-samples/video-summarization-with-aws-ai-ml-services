import boto3
from botocore.exceptions import ClientError
import os
import time

s3_client = boto3.client("s3")
polly_client = boto3.client("polly")
dynamodb_client = boto3.resource("dynamodb")


def lambda_handler(event, context):
    bucket_audio = os.environ["bucket_audio"]
    bucket_transcripts = os.environ["bucket_transcripts"]
    voiceId = event["VSHParams"]["voiceId"]
    taskId = event["VSHParams"]["taskId"]

    text = (
        s3_client.get_object(Bucket=bucket_transcripts, Key=taskId + ".txt")["Body"]
        .read()
        .decode("utf-8-sig")
    )
    text += " This video is generated by Video Summarization Hub."

    # Create Polly task
    pollyTextResponse = create_polly_text_task(text, bucket_audio, voiceId)

    # Add Polly Task Id in DynamoDB for Step Function callback function
    add_polly_taskid(
        taskId,
        os.environ["vsh_dynamodb_table"],
        pollyTextResponse["SynthesisTask"]["TaskId"],
        event["TaskToken"],
    )

    return {"statusCode": 200}


def create_polly_text_task(text, bucket_audio, voiceId):
    response = polly_client.start_speech_synthesis_task(
        Engine="neural",
        OutputFormat="json",
        OutputS3BucketName=bucket_audio,
        Text=text,
        TextType="text",
        SpeechMarkTypes=["sentence"],
        SnsTopicArn=os.environ["SNSTopic"],
        VoiceId=voiceId,
    )

    return response


def add_polly_taskid(taskId, dynamodb_table, polly_task_id, sf_task_token):
    table = dynamodb_client.Table(dynamodb_table)
    ttl = str(int(time.time() + 3600))
    dynamodbResponse = table.update_item(
        Key={"TaskId": taskId},
        UpdateExpression="SET PollyTaskId = :value1, LambdaPollyTaskToken = :value2",
        ExpressionAttributeValues={":value1": polly_task_id, ":value2": sf_task_token},
    )
